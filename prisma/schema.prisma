// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Language {
  id        Int      @id @default(autoincrement())
  key       String   @unique @db.VarChar(2)
  name      String   @unique @db.VarChar(30)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  languageKeys LanguageKey[]
  translations Translation[]

  @@map("tb_languages")
}

model Context {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(50)
  description String?  @db.VarChar(255)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  contextKeys LanguageKey[]

  @@map("tb_contexts")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(100)
  description String?  @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  rolePermissions RolePermission[]

  @@map("tb_roles")
}

model Permission {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(100)
  endpoint    String   @unique @db.VarChar(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  rolePermissions RolePermission[]

  @@map("tb_permissions")
}

model LanguageKey {
  id         Int      @id @default(autoincrement())
  keyName    String   @db.VarChar(150)
  value      String
  languageId Int
  contextId  Int
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  language   Language @relation(fields: [languageId], references: [id])
  context    Context  @relation(fields: [contextId], references: [id])

  @@unique([keyName, languageId, contextId])
  @@map("tb_language_keys")
}

model Translation {
  id         Int      @id @default(autoincrement())
  tableName  String   @db.VarChar(50)
  rowId      Int
  field      String   @db.VarChar(50)
  languageId Int
  value      String

  language   Language @relation(fields: [languageId], references: [id])

  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@unique([tableName, rowId, field, languageId])
  @@map("tb_translations")
  @@index([tableName, rowId, languageId, field], name: "idx_translation_lookup")
}

model RolePermission {
  id           Int        @id @default(autoincrement())
  roleId       Int
  permissionId Int
  createdAt    DateTime @default(now()) @map("created_at")

  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@map("role_permissions")
}
